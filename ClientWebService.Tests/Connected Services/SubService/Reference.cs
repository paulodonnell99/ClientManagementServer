//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebService.Tests.SubService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInfo", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementWebService")]
    [System.SerializableAttribute()]
    public partial class ClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LifetimeAccountsVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LifetimeVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifetimeAccountsVersion {
            get {
                return this.LifetimeAccountsVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LifetimeAccountsVersionField, value) != true)) {
                    this.LifetimeAccountsVersionField = value;
                    this.RaisePropertyChanged("LifetimeAccountsVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifetimeVersion {
            get {
                return this.LifetimeVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LifetimeVersionField, value) != true)) {
                    this.LifetimeVersionField = value;
                    this.RaisePropertyChanged("LifetimeVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationInfo", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementWebService")]
    [System.SerializableAttribute()]
    public partial class RegistrationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstRegisteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstRegisteredDate {
            get {
                return this.FirstRegisteredDateField;
            }
            set {
                if ((this.FirstRegisteredDateField.Equals(value) != true)) {
                    this.FirstRegisteredDateField = value;
                    this.RaisePropertyChanged("FirstRegisteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfLicenses {
            get {
                return this.NoOfLicensesField;
            }
            set {
                if ((this.NoOfLicensesField.Equals(value) != true)) {
                    this.NoOfLicensesField = value;
                    this.RaisePropertyChanged("NoOfLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisteredTo {
            get {
                return this.RegisteredToField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredToField, value) != true)) {
                    this.RegisteredToField = value;
                    this.RaisePropertyChanged("RegisteredTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubService.ISubscriptionWebService")]
    public interface ISubscriptionWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/GetRenewalDate", ReplyAction="http://tempuri.org/ISubscriptionWebService/GetRenewalDateResponse")]
        System.Nullable<System.DateTime> GetRenewalDate(ClientWebService.Tests.SubService.ClientInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/GetRenewalDate", ReplyAction="http://tempuri.org/ISubscriptionWebService/GetRenewalDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetRenewalDateAsync(ClientWebService.Tests.SubService.ClientInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/RegisterProduct", ReplyAction="http://tempuri.org/ISubscriptionWebService/RegisterProductResponse")]
        ClientWebService.Tests.SubService.RegistrationInfo RegisterProduct(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/RegisterProduct", ReplyAction="http://tempuri.org/ISubscriptionWebService/RegisterProductResponse")]
        System.Threading.Tasks.Task<ClientWebService.Tests.SubService.RegistrationInfo> RegisterProductAsync(string productCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/GetRegistrationInfo", ReplyAction="http://tempuri.org/ISubscriptionWebService/GetRegistrationInfoResponse")]
        ClientWebService.Tests.SubService.RegistrationInfo GetRegistrationInfo(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubscriptionWebService/GetRegistrationInfo", ReplyAction="http://tempuri.org/ISubscriptionWebService/GetRegistrationInfoResponse")]
        System.Threading.Tasks.Task<ClientWebService.Tests.SubService.RegistrationInfo> GetRegistrationInfoAsync(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubscriptionWebServiceChannel : ClientWebService.Tests.SubService.ISubscriptionWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubscriptionWebServiceClient : System.ServiceModel.ClientBase<ClientWebService.Tests.SubService.ISubscriptionWebService>, ClientWebService.Tests.SubService.ISubscriptionWebService {
        
        public SubscriptionWebServiceClient() {
        }
        
        public SubscriptionWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubscriptionWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubscriptionWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<System.DateTime> GetRenewalDate(ClientWebService.Tests.SubService.ClientInfo clientInfo) {
            return base.Channel.GetRenewalDate(clientInfo);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetRenewalDateAsync(ClientWebService.Tests.SubService.ClientInfo clientInfo) {
            return base.Channel.GetRenewalDateAsync(clientInfo);
        }
        
        public ClientWebService.Tests.SubService.RegistrationInfo RegisterProduct(string productCode) {
            return base.Channel.RegisterProduct(productCode);
        }
        
        public System.Threading.Tasks.Task<ClientWebService.Tests.SubService.RegistrationInfo> RegisterProductAsync(string productCode) {
            return base.Channel.RegisterProductAsync(productCode);
        }
        
        public ClientWebService.Tests.SubService.RegistrationInfo GetRegistrationInfo(int clientId) {
            return base.Channel.GetRegistrationInfo(clientId);
        }
        
        public System.Threading.Tasks.Task<ClientWebService.Tests.SubService.RegistrationInfo> GetRegistrationInfoAsync(int clientId) {
            return base.Channel.GetRegistrationInfoAsync(clientId);
        }
    }
}
